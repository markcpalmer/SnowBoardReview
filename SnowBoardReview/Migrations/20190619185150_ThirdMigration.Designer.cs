// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnowBoardReview;

namespace SnowBoardReview.Migrations
{
    [DbContext(typeof(SnowBoardContext))]
    [Migration("20190619185150_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SnowBoardReview.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductImage");

                    b.Property<string>("ProductName");

                    b.Property<string>("UserReview");

                    b.HasKey("ReviewID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("SnowBoardReview.Models.Snowboard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.Property<string>("ModelDescription");

                    b.Property<string>("ModelName");

                    b.Property<string>("ProductImage");

                    b.HasKey("ID");

                    b.ToTable("Snowboards");
                });

            modelBuilder.Entity("SnowBoardReview.Models.SnowboardBrand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<int>("SnowboardID");

                    b.HasKey("ID");

                    b.HasIndex("SnowboardID")
                        .IsUnique();

                    b.ToTable("SnowboardBrand");
                });

            modelBuilder.Entity("SnowBoardReview.Models.SnowboardReview", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReviewID");

                    b.Property<int>("SnowboardID");

                    b.HasKey("ID");

                    b.HasIndex("ReviewID");

                    b.HasIndex("SnowboardID");

                    b.ToTable("SnowboardReview");
                });

            modelBuilder.Entity("SnowBoardReview.Models.SnowboardBrand", b =>
                {
                    b.HasOne("SnowBoardReview.Models.Snowboard")
                        .WithOne("SnowboardBrand")
                        .HasForeignKey("SnowBoardReview.Models.SnowboardBrand", "SnowboardID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SnowBoardReview.Models.SnowboardReview", b =>
                {
                    b.HasOne("SnowBoardReview.Models.Review", "Review")
                        .WithMany("SnowboardReviews")
                        .HasForeignKey("ReviewID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SnowBoardReview.Models.Snowboard", "Snowboard")
                        .WithMany("SnowboardReviews")
                        .HasForeignKey("SnowboardID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
